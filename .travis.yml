# TODO: Use S3 cache to download osx dependencies
---
language: c++
sudo: true
dist: trusty
osx_image: xcode8.3
services:
- docker
matrix:
  include:
  - os: osx
    env: TARGET=osx
    sudo: true
  - os: linux
    env: TARGET=ubuntu:17.04
    sudo: false
env:
  global:
  - BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}
before_install: if [ "${TARGET}" = "osx" ]; then
    brew install --force openssl qt;
    ./prepare_osx_build_environment.sh;
  fi
script: case ${TARGET} in
  *osx*)
    set -e;
    source ./env.sh;
    mkdir build && cd build && cmake ..;
    make;
    make macdeployqt zip && cd ..;
    ;;
  *)
    docker run -e BUILD_NUMBER=${TRAVIS_BUILD_NUMBER} -e DEBFULLNAME="Travis" -e RUN_TESTS=${RUN_TESTS} -e DEBEMAIL="travis-ci@travis" -v $(pwd):$(pwd) -t "${TARGET}" /bin/bash -c "cd $(pwd);"'
      set -e;
      apt-get update -qq; 
      apt-get install -y cmake git dh-make devscripts dpkg-dev cdbs libdrm-dev build-essential libgl1-mesa-dev zlib1g zlib1g-dev libpcsclite-dev libssl-dev qtbase5-dev qttools5-dev qttools5-dev-tools libzip-dev pcscd;
      export MAJOR_VER=$(grep "set( MAJOR_VER" cmake/modules/TeRaVersionInfo.cmake | egrep -o "[0-9]{1,}");
      export MINOR_VER=$(grep "set( MINOR_VER" cmake/modules/TeRaVersionInfo.cmake | egrep -o "[0-9]{1,}");
      export PATCH_VER=$(grep "set( RELEASE_VER" cmake/modules/TeRaVersionInfo.cmake | egrep -o "[0-9]{1,}");
      export VERSION=${MAJOR_VER}.${MINOR_VER}.${PATCH_VER}.${BUILD_NUMBER};
      dh_make --createorig --addmissing --defaultless -y -p qdigidoc-tera_${VERSION};
      dch --distribution $(lsb_release -cs) -v ${VERSION} "Release ${VERSION}.";
      dpkg-buildpackage -rfakeroot -us -uc;
      git clean -dxf';
  esac
